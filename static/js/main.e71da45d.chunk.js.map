{"version":3,"sources":["styles.module.scss","components/Notification/index.jsx","components/Statistics/index.jsx","App.jsx","reportWebVitals.js","index.js","components/Statistics/stats.module.scss","components/Notification/notification.module.scss"],"names":["module","exports","Notifications","message","className","notecss","nice_message","Statistics","good","neutral","bad","total","positiveFeedback","Notification","statcss","results","result","App","state","counterOfGood","setState","currentState","counterOfNeutral","counterOfBad","a","b","c","toFixed","this","countTotalFeedback","countPositiveFeedbackPercentage","countcss","title","feedback","type","onClick","is_good","is_neutral","is_bad","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,yBAAyB,QAAU,wBAAwB,OAAS,uBAAuB,WAAa,2BAA2B,MAAQ,wB,+JCQzJC,EANO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAO,qBAAKC,UAAWC,IAAQC,aAAxB,SAAuCH,KCwBjCI,EAxBI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC/C,OAAgB,IAATJ,GAA0B,IAAZC,GAAyB,IAARC,EACpC,cAACG,EAAD,CAAcV,QAAQ,sBAEtB,8BACE,qBAAIC,UAAWU,IAAQC,QAAvB,UACE,qBAAIX,UAAWU,IAAQE,OAAvB,mBAAsCR,KACtC,qBAAIJ,UAAWU,IAAQE,OAAvB,sBAAyCP,KACzC,qBAAIL,UAAWU,IAAQE,OAAvB,kBAAqCN,KACrC,qBAAIN,UAAWU,IAAQE,OAAvB,oBAAuCL,KACvC,qBAAIP,UAAWU,IAAQE,OAAvB,gCACsBJ,WC+DfK,E,4MAzEbC,MAAQ,CAAEV,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCS,cAAgB,WACd,EAAKC,UAAS,SAAAC,GACZ,MAAO,CAAEb,KAAMa,EAAab,KAAO,O,EAGvCc,iBAAmB,WACjB,EAAKF,UAAS,SAAAC,GACZ,MAAO,CAAEZ,QAASY,EAAaZ,QAAU,O,EAG7Cc,aAAe,WACb,EAAKH,UAAS,SAAAC,GACZ,MAAO,CAAEX,IAAKW,EAAaX,IAAM,O,wDAIrC,SAAmBc,EAAGC,EAAGC,GACvB,OAAOF,EAAIC,EAAIC,I,6CAEjB,SAAgCF,EAAGC,EAAGC,GAEpC,OADcF,GAAKA,EAAIC,EAAIC,GAAM,KACrBC,QAAQ,GAAK,M,oBAG3B,WAAU,IAAD,EACwBC,KAAKV,MAA5BV,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQiB,KAAKC,mBAAmBrB,EAAMC,EAASC,GAC/CE,EAAmBgB,KAAKE,gCAC5BtB,EACAC,EACAC,GAEF,OACE,qCACE,oBAAIN,UAAW2B,IAASC,MAAxB,wCACA,sBAAK5B,UAAW2B,IAASE,SAAzB,UACE,wBACEC,KAAK,SACLC,QAASP,KAAKT,cACdf,UAAW2B,IAASK,QAHtB,kBAOA,wBACEF,KAAK,SACLC,QAASP,KAAKN,iBACdlB,UAAW2B,IAASM,WAHtB,qBAOA,wBACEH,KAAK,SACLC,QAASP,KAAKL,aACdnB,UAAW2B,IAASO,OAHtB,oBAQF,oBAAIlC,UAAW2B,IAASC,MAAxB,wBAEA,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,iBAAkBA,W,GApEV2B,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,K,kBClBAxC,EAAOC,QAAU,CAAC,SAAW,wBAAwB,QAAU,uBAAuB,OAAS,sBAAsB,WAAa,0BAA0B,QAAU,yB,kBCAtKD,EAAOC,QAAU,CAAC,aAAe,sC","file":"static/js/main.e71da45d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"styles_feedback__3dvPC\",\"is_good\":\"styles_is_good__3eTFF\",\"is_bad\":\"styles_is_bad__1jjZG\",\"is_neutral\":\"styles_is_neutral__1dsNu\",\"title\":\"styles_title__17kFA\"};","import notecss from './notification.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notifications = ({ message }) => {\r\n  return <div className={notecss.nice_message}>{message}</div>;\r\n};\r\nNotifications.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notifications;\r\n","import PropTypes from 'prop-types';\r\nimport statcss from './stats.module.scss';\r\nimport Notification from '../Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\r\n  return good === 0 && neutral === 0 && bad === 0 ? (\r\n    <Notification message=\"No feedback given\" />\r\n  ) : (\r\n    <div>\r\n      <ul className={statcss.results}>\r\n        <li className={statcss.result}>Good: {good}</li>\r\n        <li className={statcss.result}>Neutral: {neutral}</li>\r\n        <li className={statcss.result}>Bad: {bad}</li>\r\n        <li className={statcss.result}>Total: {total}</li>\r\n        <li className={statcss.result}>\r\n          Positive feedback: {positiveFeedback}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.number,\r\n};\r\nexport default Statistics;\r\n","import { Component } from 'react';\nimport countcss from './styles.module.scss';\nimport Statistics from './components/Statistics';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  counterOfGood = () => {\n    this.setState(currentState => {\n      return { good: currentState.good + 1 };\n    });\n  };\n  counterOfNeutral = () => {\n    this.setState(currentState => {\n      return { neutral: currentState.neutral + 1 };\n    });\n  };\n  counterOfBad = () => {\n    this.setState(currentState => {\n      return { bad: currentState.bad + 1 };\n    });\n  };\n\n  countTotalFeedback(a, b, c) {\n    return a + b + c;\n  }\n  countPositiveFeedbackPercentage(a, b, c) {\n    const part = (a / (a + b + c)) * 100;\n    return part.toFixed(0) + '%';\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback(good, neutral, bad);\n    const positiveFeedback = this.countPositiveFeedbackPercentage(\n      good,\n      neutral,\n      bad,\n    );\n    return (\n      <>\n        <h1 className={countcss.title}>PLEASE, LEAVE YOUR COMMENT</h1>\n        <div className={countcss.feedback}>\n          <button\n            type=\"button\"\n            onClick={this.counterOfGood}\n            className={countcss.is_good}\n          >\n            Good\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.counterOfNeutral}\n            className={countcss.is_neutral}\n          >\n            Neutral\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.counterOfBad}\n            className={countcss.is_bad}\n          >\n            Bad\n          </button>\n        </div>\n        <h2 className={countcss.title}>STATISTICS</h2>\n\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positiveFeedback={positiveFeedback}\n        />\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.module.scss';\nimport App from './App';\n// import CountClicks from './components/CountClicks';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <CountClicks /> */}\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"stats_feedback__220Z1\",\"is_good\":\"stats_is_good__2SPed\",\"is_bad\":\"stats_is_bad__2SM9q\",\"is_neutral\":\"stats_is_neutral__2STXj\",\"results\":\"stats_results__1w0NH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nice_message\":\"notification_nice_message__3at69\"};"],"sourceRoot":""}